// <auto-generated />
using System;
using ClassLibrary1;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace ClassLibrary1.Migrations
{
    [DbContext(typeof(ShopContext))]
    [Migration("20190318121647_sp")]
    partial class sp
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.2-servicing-10034")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("ClassLibrary1.CatalogueSnapshots", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId");

                    b.Property<bool>("Enabled");

                    b.Property<DateTime>("When");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("CatalogueSnapshots","Catalogue");
                });

            modelBuilder.Entity("ClassLibrary1.Companies", b =>
                {
                    b.Property<int>("Id");

                    b.Property<string>("CustomerId")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<bool>("IsSynchronizing");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.HasKey("Id");

                    b.ToTable("Companies","Catalogue");
                });

            modelBuilder.Entity("ClassLibrary1.Country", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Countries");
                });

            modelBuilder.Entity("ClassLibrary1.Customer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Name")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("Customers");
                });

            modelBuilder.Entity("ClassLibrary1.MerchandisePlanningProductDimensions", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("MerchandisePlanningId");

                    b.Property<bool>("SelectedClassificationLevel1");

                    b.Property<bool>("SelectedClassificationLevel10");

                    b.Property<bool>("SelectedClassificationLevel2");

                    b.Property<bool>("SelectedClassificationLevel3");

                    b.Property<bool>("SelectedClassificationLevel4");

                    b.Property<bool>("SelectedClassificationLevel5");

                    b.Property<bool>("SelectedClassificationLevel6");

                    b.Property<bool>("SelectedClassificationLevel7");

                    b.Property<bool>("SelectedClassificationLevel8");

                    b.Property<bool>("SelectedClassificationLevel9");

                    b.Property<string>("Typology")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<int>("TypologyId");

                    b.HasKey("Id");

                    b.HasIndex("MerchandisePlanningId");

                    b.ToTable("MerchandisePlanningProductDimensions");
                });

            modelBuilder.Entity("ClassLibrary1.MerchandisePlannings", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CalendarType");

                    b.Property<int>("CatalogueSnapshotId");

                    b.Property<DateTime?>("CreationDate");

                    b.Property<int?>("CurrentPeriod");

                    b.Property<string>("Description")
                        .HasMaxLength(128);

                    b.Property<DateTime>("EndDate");

                    b.Property<decimal?>("Inflation")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<DateTime?>("LastCalculationDate");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128);

                    b.Property<DateTime?>("NextCalculationDate");

                    b.Property<int>("PeriodType");

                    b.Property<DateTime>("StartDate");

                    b.Property<int>("Status");

                    b.HasKey("Id");

                    b.HasIndex("CatalogueSnapshotId");

                    b.ToTable("MerchandisePlannings");
                });

            modelBuilder.Entity("ClassLibrary1.RoizingAssortmentCells", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CurrentYearAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("CurrentYearFinalStock");

                    b.Property<decimal?>("CurrentYearGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("CurrentYearInitialStock");

                    b.Property<decimal?>("CurrentYearMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("CurrentYearSalesQuantity");

                    b.Property<decimal?>("CurrentYearSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("ForecastFinalStock");

                    b.Property<decimal>("ForecastGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("ForecastInitialStock");

                    b.Property<decimal>("ForecastMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("ForecastSalesQuantity");

                    b.Property<decimal>("ForecastSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("LastYearFinalStock");

                    b.Property<decimal?>("LastYearGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("LastYearInitialStock");

                    b.Property<decimal?>("LastYearMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("LastYearSalesQuantity");

                    b.Property<decimal?>("LastYearSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("PlannedCoverage");

                    b.Property<int>("PlannedFinalStock");

                    b.Property<decimal>("PlannedGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("PlannedInitialStock");

                    b.Property<decimal>("PlannedMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedOtb")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("PlannedSalesQuantity");

                    b.Property<decimal>("PlannedSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("RealAndForecastFinalStock");

                    b.Property<decimal>("RealAndForecastGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("RealAndForecastInitialStock");

                    b.Property<decimal>("RealAndForecastMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("RealAndForecastSalesQuantity");

                    b.Property<decimal>("RealAndForecastSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("RoizingAssortmentId");

                    b.Property<int>("RoizingAssortmentPeriodId");

                    b.Property<int>("RoizingAssortmentRowId");

                    b.Property<decimal>("SuggestedAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("SuggestedCoverage");

                    b.Property<int>("SuggestedFinalStock");

                    b.Property<decimal>("SuggestedGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("SuggestedInitialStock");

                    b.Property<decimal>("SuggestedMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedOtb")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("SuggestedSalesQuantity");

                    b.Property<decimal>("SuggestedSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.HasKey("Id");

                    b.HasIndex("RoizingAssortmentPeriodId");

                    b.HasIndex("RoizingAssortmentRowId");

                    b.HasIndex("PlannedSalesQuantity", "PlannedTotalCost", "RoizingAssortmentPeriodId", "RoizingAssortmentRowId", "RoizingAssortmentId")
                        .HasName("IX_RoizingAssortmentCells_RoizingAssortmentIdIncludingRowPeriodQuantityAndCost");

                    b.ToTable("RoizingAssortmentCells");
                });

            modelBuilder.Entity("ClassLibrary1.RoizingAssortmentPeriods", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CurrentYearAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("CurrentYearSalesQuantity");

                    b.Property<decimal?>("CurrentYearSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("ForecastSalesQuantity");

                    b.Property<decimal>("ForecastSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("LastYearSalesQuantity");

                    b.Property<decimal?>("LastYearSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("MerchandisePlanningPeriodId");

                    b.Property<decimal>("PlannedAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("PlannedCoverage");

                    b.Property<int>("PlannedFinalStock");

                    b.Property<decimal>("PlannedGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("PlannedInitialStock");

                    b.Property<decimal>("PlannedMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedOtb")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("PlannedSalesQuantity");

                    b.Property<decimal>("PlannedSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("RealAndForecastSalesQuantity");

                    b.Property<decimal>("RealAndForecastSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("RoizingAssortmentId");

                    b.Property<decimal>("SuggestedAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("SuggestedCoverage");

                    b.Property<int>("SuggestedFinalStock");

                    b.Property<decimal>("SuggestedGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("SuggestedInitialStock");

                    b.Property<decimal>("SuggestedMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedOtb")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("SuggestedSalesQuantity");

                    b.Property<decimal>("SuggestedSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("YearPeriod");

                    b.HasKey("Id");

                    b.HasIndex("RoizingAssortmentId");

                    b.ToTable("RoizingAssortmentPeriods");
                });

            modelBuilder.Entity("ClassLibrary1.RoizingAssortmentRows", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Channel")
                        .HasMaxLength(128);

                    b.Property<int>("ChannelId");

                    b.Property<decimal?>("CurrentYearAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("CurrentYearSalesQuantity");

                    b.Property<decimal?>("CurrentYearSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("ForecastSalesQuantity");

                    b.Property<decimal>("ForecastSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("LastYearSalesQuantity");

                    b.Property<decimal?>("LastYearSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("PlannedCoverage");

                    b.Property<int>("PlannedFinalStock");

                    b.Property<decimal>("PlannedGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("PlannedInitialStock");

                    b.Property<decimal>("PlannedMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedOtb")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("PlannedSalesQuantity");

                    b.Property<decimal>("PlannedSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<string>("PointOfSale")
                        .HasMaxLength(128);

                    b.Property<int>("PointOfSaleId");

                    b.Property<string>("ProductClassificationLevel1")
                        .HasMaxLength(128);

                    b.Property<string>("ProductClassificationLevel10")
                        .HasMaxLength(128);

                    b.Property<string>("ProductClassificationLevel2")
                        .HasMaxLength(128);

                    b.Property<string>("ProductClassificationLevel3")
                        .HasMaxLength(128);

                    b.Property<string>("ProductClassificationLevel4")
                        .HasMaxLength(128);

                    b.Property<string>("ProductClassificationLevel5")
                        .HasMaxLength(128);

                    b.Property<string>("ProductClassificationLevel6")
                        .HasMaxLength(128);

                    b.Property<string>("ProductClassificationLevel7")
                        .HasMaxLength(128);

                    b.Property<string>("ProductClassificationLevel8")
                        .HasMaxLength(128);

                    b.Property<string>("ProductClassificationLevel9")
                        .HasMaxLength(128);

                    b.Property<decimal>("RealAndForecastAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("RealAndForecastSalesQuantity");

                    b.Property<decimal>("RealAndForecastSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("RoizingAssortmentId");

                    b.Property<decimal>("SuggestedAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("SuggestedCoverage");

                    b.Property<int>("SuggestedFinalStock");

                    b.Property<decimal>("SuggestedGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("SuggestedInitialStock");

                    b.Property<decimal>("SuggestedMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedOtb")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("SuggestedSalesQuantity");

                    b.Property<decimal>("SuggestedSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<string>("Typology")
                        .HasMaxLength(128);

                    b.Property<int>("TypologyId");

                    b.HasKey("Id");

                    b.HasIndex("RoizingAssortmentId");

                    b.HasIndex("PointOfSaleId", "ProductClassificationLevel1", "ProductClassificationLevel10", "ProductClassificationLevel2", "ProductClassificationLevel3", "ProductClassificationLevel4", "ProductClassificationLevel5", "ProductClassificationLevel6", "ProductClassificationLevel7", "ProductClassificationLevel8", "ProductClassificationLevel9", "TypologyId", "RoizingAssortmentId")
                        .HasName("IX_RoizingAssortmentRows_RoizingAssortmentIdIncludingDimensions");

                    b.ToTable("RoizingAssortmentRows");
                });

            modelBuilder.Entity("ClassLibrary1.RoizingAssortments", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal?>("CurrentYearAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("CurrentYearSalesQuantity");

                    b.Property<decimal?>("CurrentYearSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("CurrentYearTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("ForecastSalesQuantity");

                    b.Property<decimal>("ForecastSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("ForecastTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int?>("LastYearSalesQuantity");

                    b.Property<decimal?>("LastYearSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal?>("LastYearTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("MerchandisePlanningId");

                    b.Property<decimal>("PlannedAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("PlannedCoverage");

                    b.Property<int>("PlannedFinalStock");

                    b.Property<decimal>("PlannedGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("PlannedInitialStock");

                    b.Property<decimal>("PlannedMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedOtb")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("PlannedSalesQuantity");

                    b.Property<decimal>("PlannedSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("PlannedTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("RealAndForecastSalesQuantity");

                    b.Property<decimal>("RealAndForecastSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("RealAndForecastTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedAverageCost")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedAveragePrice")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("SuggestedCoverage");

                    b.Property<int>("SuggestedFinalStock");

                    b.Property<decimal>("SuggestedGlobalSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedGrossMargin")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("SuggestedInitialStock");

                    b.Property<decimal>("SuggestedMarkup")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedOtb")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedPeriodSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedRowSalesTurnoverPercentage")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<int>("SuggestedSalesQuantity");

                    b.Property<decimal>("SuggestedSalesTurnover")
                        .HasColumnType("decimal(28, 15)");

                    b.Property<decimal>("SuggestedTotalCost")
                        .HasColumnType("decimal(28, 15)");

                    b.HasKey("Id");

                    b.HasIndex("MerchandisePlanningId")
                        .IsUnique();

                    b.ToTable("RoizingAssortments");
                });

            modelBuilder.Entity("ClassLibrary1.CatalogueSnapshots", b =>
                {
                    b.HasOne("ClassLibrary1.Companies", "Company")
                        .WithMany("CatalogueSnapshots")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClassLibrary1.MerchandisePlanningProductDimensions", b =>
                {
                    b.HasOne("ClassLibrary1.MerchandisePlannings", "MerchandisePlanning")
                        .WithMany("MerchandisePlanningProductDimensions")
                        .HasForeignKey("MerchandisePlanningId");
                });

            modelBuilder.Entity("ClassLibrary1.MerchandisePlannings", b =>
                {
                    b.HasOne("ClassLibrary1.CatalogueSnapshots", "CatalogueSnapshot")
                        .WithMany("MerchandisePlannings")
                        .HasForeignKey("CatalogueSnapshotId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("ClassLibrary1.RoizingAssortmentCells", b =>
                {
                    b.HasOne("ClassLibrary1.RoizingAssortmentPeriods", "RoizingAssortmentPeriod")
                        .WithMany("RoizingAssortmentCells")
                        .HasForeignKey("RoizingAssortmentPeriodId");

                    b.HasOne("ClassLibrary1.RoizingAssortmentRows", "RoizingAssortmentRow")
                        .WithMany("RoizingAssortmentCells")
                        .HasForeignKey("RoizingAssortmentRowId");
                });

            modelBuilder.Entity("ClassLibrary1.RoizingAssortmentPeriods", b =>
                {
                    b.HasOne("ClassLibrary1.RoizingAssortments", "RoizingAssortment")
                        .WithMany("RoizingAssortmentPeriods")
                        .HasForeignKey("RoizingAssortmentId");
                });

            modelBuilder.Entity("ClassLibrary1.RoizingAssortmentRows", b =>
                {
                    b.HasOne("ClassLibrary1.RoizingAssortments", "RoizingAssortment")
                        .WithMany("RoizingAssortmentRows")
                        .HasForeignKey("RoizingAssortmentId");
                });

            modelBuilder.Entity("ClassLibrary1.RoizingAssortments", b =>
                {
                    b.HasOne("ClassLibrary1.MerchandisePlannings", "MerchandisePlanning")
                        .WithOne("RoizingAssortments")
                        .HasForeignKey("ClassLibrary1.RoizingAssortments", "MerchandisePlanningId");
                });
#pragma warning restore 612, 618
        }
    }
}
